{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"C:\\\\Users\\\\oguzh\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\with-apollo\\\\components\\\\PostUpvoter.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable  */\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Button, { ButtonGroup } from \"@atlaskit/button\";\nvar votes;\n\nvar useCounter = function useCounter() {\n  var count = useSelector(function (state) {\n    return state.count;\n  });\n  var dispatch = useDispatch();\n\n  var increment = function increment(likes) {\n    return dispatch({\n      type: \"INCREMENT\",\n      payload: likes\n    });\n  };\n\n  return {\n    count: count,\n    increment: increment\n  };\n};\n\nexport default function PostUpvoter(_ref) {\n  var id = _ref.id;\n\n  var _useState = useState(0),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var _useCounter = useCounter(0),\n      counte = _useCounter.counte,\n      increment = _useCounter.increment;\n\n  useEffect(function () {\n    votes = localStorage.getItem(id);\n    setCount(votes);\n  }, []);\n\n  var upvotePost = function upvotePost(id) {\n    localStorage.setItem(id, _parseInt(count) + 1);\n    increment(_parseInt(count) + 1);\n    setCount(_parseInt(count) + 1);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Button, {\n    appearance: \"primary\",\n    style: {\n      width: \"100%\",\n      paddingLeft: \"45%\",\n      height: \"35px\",\n      paddingBottom: \"20%\"\n    },\n    onClick: function onClick() {\n      return upvotePost(id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, count)));\n}","map":{"version":3,"sources":["C:/Users/oguzh/OneDrive/Masaüstü/with-apollo/components/PostUpvoter.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Button","ButtonGroup","votes","useCounter","count","state","dispatch","increment","likes","type","payload","PostUpvoter","id","setCount","counte","localStorage","getItem","upvotePost","setItem","width","paddingLeft","height","paddingBottom"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,IAAiBC,WAAjB,QAAoC,kBAApC;AACA,IAAIC,KAAJ;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAMC,KAAK,GAAGN,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACD,KAAV;AAAA,GAAN,CAAzB;AACA,MAAME,QAAQ,GAAGP,WAAW,EAA5B;;AACA,MAAMQ,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK;AAAA,WACrBF,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,WADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CADa;AAAA,GAAvB;;AAMA,SAAO;AAAEJ,IAAAA,KAAK,EAALA,KAAF;AAASG,IAAAA,SAAS,EAATA;AAAT,GAAP;AACD,CAVD;;AAYA,eAAe,SAASI,WAAT,OAA6B;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,kBAChBhB,QAAQ,CAAC,CAAD,CADQ;AAAA,MACnCQ,KADmC;AAAA,MAC5BS,QAD4B;;AAAA,oBAEZV,UAAU,CAAC,CAAD,CAFE;AAAA,MAElCW,MAFkC,eAElCA,MAFkC;AAAA,MAE1BP,SAF0B,eAE1BA,SAF0B;;AAG1CV,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,KAAK,GAAGa,YAAY,CAACC,OAAb,CAAqBJ,EAArB,CAAR;AACAC,IAAAA,QAAQ,CAACX,KAAD,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAMe,UAAU,GAAG,SAAbA,UAAa,CAAAL,EAAE,EAAI;AACvBG,IAAAA,YAAY,CAACG,OAAb,CAAqBN,EAArB,EAAyB,UAASR,KAAT,IAAkB,CAA3C;AACAG,IAAAA,SAAS,CAAC,UAASH,KAAT,IAAkB,CAAnB,CAAT;AACAS,IAAAA,QAAQ,CAAC,UAAST,KAAT,IAAkB,CAAnB,CAAR;AACD,GAJD;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,UAAU,EAAC,SADb;AAEE,IAAA,KAAK,EAAE;AACLe,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,WAAW,EAAE,KAFR;AAGLC,MAAAA,MAAM,EAAE,MAHH;AAILC,MAAAA,aAAa,EAAE;AAJV,KAFT;AAQE,IAAA,OAAO,EAAE;AAAA,aAAML,UAAU,CAACL,EAAD,CAAhB;AAAA,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,KAAJ,CAVF,CADF,CADF;AAgBD","sourcesContent":["/* eslint-disable  */\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Button, { ButtonGroup } from \"@atlaskit/button\";\nvar votes;\n\nconst useCounter = () => {\n  const count = useSelector(state => state.count);\n  const dispatch = useDispatch();\n  const increment = likes =>\n    dispatch({\n      type: \"INCREMENT\",\n      payload: likes\n    });\n\n  return { count, increment };\n};\n\nexport default function PostUpvoter({ id }) {\n  const [count, setCount] = useState(0);\n  const { counte, increment } = useCounter(0);\n  useEffect(() => {\n    votes = localStorage.getItem(id);\n    setCount(votes);\n  }, []);\n\n  const upvotePost = id => {\n    localStorage.setItem(id, parseInt(count) + 1);\n    increment(parseInt(count) + 1);\n    setCount(parseInt(count) + 1);\n  };\n\n  return (\n    <div>\n      <Button\n        appearance='primary'\n        style={{\n          width: \"100%\",\n          paddingLeft: \"45%\",\n          height: \"35px\",\n          paddingBottom: \"20%\"\n        }}\n        onClick={() => upvotePost(id)}\n      >\n        <p>{count}</p>\n      </Button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}