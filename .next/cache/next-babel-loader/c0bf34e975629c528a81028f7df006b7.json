{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"C:\\\\Users\\\\oguzh\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\with-apollo\\\\components\\\\PostUpvoter.js\";\nvar __jsx = React.createElement;\n\n/* eslint-disable  */\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Button, { ButtonGroup } from \"@atlaskit/button\";\nvar votes;\n\nconst useCounter = () => {\n  const count = useSelector(state => state.count);\n  const dispatch = useDispatch();\n\n  const increment = likes => dispatch({\n    type: \"INCREMENT\",\n    payload: likes\n  });\n\n  return {\n    count,\n    increment\n  };\n};\n\nexport default function PostUpvoter({\n  id\n}) {\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  const {\n    counte,\n    increment\n  } = useCounter(0);\n  useEffect(() => {\n    votes = localStorage.getItem(id);\n    setCount(votes);\n  }, []);\n\n  const upvotePost = id => {\n    localStorage.setItem(id, _parseInt(count) + 1);\n    increment(_parseInt(count) + 1);\n    setCount(_parseInt(count) + 1);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(Button, {\n    appearance: \"primary\",\n    style: {\n      width: \"100%\",\n      paddingLeft: \"45%\",\n      height: \"35px\",\n      paddingBottom: \"20%\"\n    },\n    onClick: () => upvotePost(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, count)));\n}","map":{"version":3,"sources":["C:/Users/oguzh/OneDrive/Masaüstü/with-apollo/components/PostUpvoter.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Button","ButtonGroup","votes","useCounter","count","state","dispatch","increment","likes","type","payload","PostUpvoter","id","setCount","counte","localStorage","getItem","upvotePost","setItem","width","paddingLeft","height","paddingBottom"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,IAAiBC,WAAjB,QAAoC,kBAApC;AACA,IAAIC,KAAJ;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,KAAK,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB;AACA,QAAME,QAAQ,GAAGP,WAAW,EAA5B;;AACA,QAAMQ,SAAS,GAAGC,KAAK,IACrBF,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAE,WADC;AAEPC,IAAAA,OAAO,EAAEF;AAFF,GAAD,CADV;;AAMA,SAAO;AAAEJ,IAAAA,KAAF;AAASG,IAAAA;AAAT,GAAP;AACD,CAVD;;AAYA,eAAe,SAASI,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAA6B;AAC1C,QAAM;AAAA,OAACR,KAAD;AAAA,OAAQS;AAAR,MAAoBjB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAEkB,IAAAA,MAAF;AAAUP,IAAAA;AAAV,MAAwBJ,UAAU,CAAC,CAAD,CAAxC;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,GAAGa,YAAY,CAACC,OAAb,CAAqBJ,EAArB,CAAR;AACAC,IAAAA,QAAQ,CAACX,KAAD,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMe,UAAU,GAAGL,EAAE,IAAI;AACvBG,IAAAA,YAAY,CAACG,OAAb,CAAqBN,EAArB,EAAyB,UAASR,KAAT,IAAkB,CAA3C;AACAG,IAAAA,SAAS,CAAC,UAASH,KAAT,IAAkB,CAAnB,CAAT;AACAS,IAAAA,QAAQ,CAAC,UAAST,KAAT,IAAkB,CAAnB,CAAR;AACD,GAJD;;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,UAAU,EAAC,SADb;AAEE,IAAA,KAAK,EAAE;AACLe,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,WAAW,EAAE,KAFR;AAGLC,MAAAA,MAAM,EAAE,MAHH;AAILC,MAAAA,aAAa,EAAE;AAJV,KAFT;AAQE,IAAA,OAAO,EAAE,MAAML,UAAU,CAACL,EAAD,CAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,KAAJ,CAVF,CADF,CADF;AAgBD","sourcesContent":["/* eslint-disable  */\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Button, { ButtonGroup } from \"@atlaskit/button\";\nvar votes;\n\nconst useCounter = () => {\n  const count = useSelector(state => state.count);\n  const dispatch = useDispatch();\n  const increment = likes =>\n    dispatch({\n      type: \"INCREMENT\",\n      payload: likes\n    });\n\n  return { count, increment };\n};\n\nexport default function PostUpvoter({ id }) {\n  const [count, setCount] = useState(0);\n  const { counte, increment } = useCounter(0);\n  useEffect(() => {\n    votes = localStorage.getItem(id);\n    setCount(votes);\n  }, []);\n\n  const upvotePost = id => {\n    localStorage.setItem(id, parseInt(count) + 1);\n    increment(parseInt(count) + 1);\n    setCount(parseInt(count) + 1);\n  };\n\n  return (\n    <div>\n      <Button\n        appearance='primary'\n        style={{\n          width: \"100%\",\n          paddingLeft: \"45%\",\n          height: \"35px\",\n          paddingBottom: \"20%\"\n        }}\n        onClick={() => upvotePost(id)}\n      >\n        <p>{count}</p>\n      </Button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}